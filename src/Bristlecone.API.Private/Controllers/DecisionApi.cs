/*
 * Application Microservice
 *
 * Manage and process applications
 *
 * OpenAPI spec version: 1.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System.Collections.Generic;
using Microsoft.AspNetCore.Mvc;
using Newtonsoft.Json;
using Swashbuckle.SwaggerGen.Annotations;
using Bristlecone.ViewModels.DTO;

namespace IO.Swagger.Controllers
{
    /// <summary>
    /// 
    /// </summary>
    public class DecisionApiController : Controller
    { 

        /// <summary>
        /// Get the decision for applications
        /// </summary>
        /// <remarks>Returns the approval decision information about an application </remarks>
        /// <param name="ids">Ids of the applications</param>
        /// <response code="200">An array of applications</response>
        /// <response code="0">Unexpected error</response>
        [HttpGet]
        [Route("/v1/decision")]
        [SwaggerOperation("DecisionGet")]
        [ProducesResponseType(typeof(List<ApplicationDecisionDTO>), 200)]
        public virtual IActionResult DecisionGet([FromQuery]List<string> ids)
        { 
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<List<ApplicationDecisionDTO>>(exampleJson)
            : default(List<ApplicationDecisionDTO>);
            return new ObjectResult(example);
        }


        /// <summary>
        /// 
        /// </summary>
        /// <remarks>Initiates the application decision process</remarks>
        /// <param name="body">All of the information required to make a decision about an application</param>
        /// <response code="200">Application response</response>
        /// <response code="0">Unexpected error</response>
        [HttpPost]
        [Route("/v1/decision")]
        [SwaggerOperation("DecisionPost")]
        [ProducesResponseType(typeof(ApplicationDecisionDTO), 200)]
        public virtual IActionResult DecisionPost([FromBody]ApplicationDecisionDTO body)
        { 
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<ApplicationDecisionDTO>(exampleJson)
            : default(ApplicationDecisionDTO);
            return new ObjectResult(example);
        }
    }
}
